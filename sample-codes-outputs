(base) nirajanbudhathoki@Nirajans-Air ~ % mongosh
Current Mongosh Log ID: 65653b68d94bf142291300d1
Connecting to:          mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.1.0
(node:99831) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)
Using MongoDB:          7.0.2
Using Mongosh:          2.1.0

For mongosh info see: https://docs.mongodb.com/mongodb-shell/

------
   The server generated these startup warnings when booting
   2023-11-26T00:27:43.368-05:00: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
------

test> show dbs
admin       40.00 KiB
bookstore  144.00 KiB
config      48.00 KiB
local       72.00 KiB
school      44.00 KiB
work        72.00 KiB
test> use school
switched to db school
school> show collections
students
school> use work
switched to db work
work> db.dropDatabase()
{ ok: 1, dropped: 'work' }
work> show dbs
admin       40.00 KiB
bookstore  144.00 KiB
config      72.00 KiB
local       72.00 KiB
school      44.00 KiB
work> use work
already on db work
work> show collections

work> db.createCollection("employees")
{ ok: 1 }
work> show dbs
admin       40.00 KiB
bookstore  144.00 KiB
config      72.00 KiB
local       72.00 KiB
school      44.00 KiB
work         8.00 KiB
work> show dbs
admin       40.00 KiB
bookstore  144.00 KiB
config      72.00 KiB
local       72.00 KiB
school      44.00 KiB
work         8.00 KiB
work>  show collections
employees
work> db.employees.insertOne({name:"Tom",age:33,gpa:3.2})  // insert document
{
  acknowledged: true,
  insertedId: ObjectId('656540fbd94bf142291300d2')
}
work> db.employees.find()
[
  {
    _id: ObjectId('656540fbd94bf142291300d2'),
    name: 'Tom',
    age: 33,
    gpa: 3.2
  }
]
work> db.employees.insertMany([{name:"Bob",age:21,gpa:3.5},{name:"Harry",age:30,gpa:2.8},{name:"Sandy",age:19,gpa:3.9}])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('656544fcd94bf142291300d5'),
    '1': ObjectId('656544fcd94bf142291300d6'),
    '2': ObjectId('656544fcd94bf142291300d7')
  }
}
work> db.employees.find() //4 documents found in the employees collection
[
  {
    _id: ObjectId('656543dbd94bf142291300d4'),
    name: 'Tom',
    age: 33,
    gpa: 3.2
  },
  {
    _id: ObjectId('656544fcd94bf142291300d5'),
    name: 'Bob',
    age: 21,
    gpa: 3.5
  },
  {
    _id: ObjectId('656544fcd94bf142291300d6'),
    name: 'Harry',
    age: 30,
    gpa: 2.8
  },
  {
    _id: ObjectId('656544fcd94bf142291300d7'),
    name: 'Sandy',
    age: 19,
    gpa: 3.9
  }
]
work> db.employees.insertOne({name:"Larry Xu", age:44, gpa: 3.5, fullTime: false, startDate: new Date("2022-01-02"),endDate: null, majors:["stats","cs"],address:{street:"123 Fake St.",city:"Fake City",zip:12345}}) //inserting various datatypes 
{
  acknowledged: true,
  insertedId: ObjectId('656546edd94bf142291300d8')
}
work> db.employees.find()
[
  {
    _id: ObjectId('656543dbd94bf142291300d4'),
    name: 'Tom',
    age: 33,
    gpa: 3.2
  },
  {
    _id: ObjectId('656544fcd94bf142291300d5'),
    name: 'Bob',
    age: 21,
    gpa: 3.5
  },
  {
    _id: ObjectId('656544fcd94bf142291300d6'),
    name: 'Harry',
    age: 30,
    gpa: 2.8
  },
  {
    _id: ObjectId('656544fcd94bf142291300d7'),
    name: 'Sandy',
    age: 19,
    gpa: 3.9
  },
  {
    _id: ObjectId('656546edd94bf142291300d8'),
    name: 'Larry Xu',
    age: 44,
    gpa: 3.5,
    fullTime: false,
    startDate: ISODate('2022-01-02T00:00:00.000Z'),
    endDate: null,
    majors: [ 'stats', 'cs' ],
    address: { street: '123 Fake St.', city: 'Fake City', zip: 12345 }
  }
]
work> db.employees.find().sort({name:1}) //sort documents by name in alphabetical order
[
  {
    _id: ObjectId('656544fcd94bf142291300d5'),
    name: 'Bob',
    age: 21,
    gpa: 3.5
  },
  {
    _id: ObjectId('656544fcd94bf142291300d6'),
    name: 'Harry',
    age: 30,
    gpa: 2.8
  },
  {
    _id: ObjectId('656546edd94bf142291300d8'),
    name: 'Larry Xu',
    age: 44,
    gpa: 3.5,
    fullTime: false,
    startDate: ISODate('2022-01-02T00:00:00.000Z'),
    endDate: null,
    majors: [ 'stats', 'cs' ],
    address: { street: '123 Fake St.', city: 'Fake City', zip: 12345 }
  },
  {
    _id: ObjectId('656544fcd94bf142291300d7'),
    name: 'Sandy',
    age: 19,
    gpa: 3.9
  },
  {
    _id: ObjectId('656543dbd94bf142291300d4'),
    name: 'Tom',
    age: 33,
    gpa: 3.2
  }
]
work> db.employees.find().sort({name:-1}) //sort documents by name in reverse alphabetical order
[
  {
    _id: ObjectId('656543dbd94bf142291300d4'),
    name: 'Tom',
    age: 33,
    gpa: 3.2
  },
  {
    _id: ObjectId('656544fcd94bf142291300d7'),
    name: 'Sandy',
    age: 19,
    gpa: 3.9
  },
  {
    _id: ObjectId('656546edd94bf142291300d8'),
    name: 'Larry Xu',
    age: 44,
    gpa: 3.5,
    fullTime: false,
    startDate: ISODate('2022-01-02T00:00:00.000Z'),
    endDate: null,
    majors: [ 'stats', 'cs' ],
    address: { street: '123 Fake St.', city: 'Fake City', zip: 12345 }
  },
  {
    _id: ObjectId('656544fcd94bf142291300d6'),
    name: 'Harry',
    age: 30,
    gpa: 2.8
  },
  {
    _id: ObjectId('656544fcd94bf142291300d5'),
    name: 'Bob',
    age: 21,
    gpa: 3.5
  }
]
work> db.employees.find().sort({gpa:1}) //sort documents by gpa in ascending  order
[
  {
    _id: ObjectId('656544fcd94bf142291300d6'),
    name: 'Harry',
    age: 30,
    gpa: 2.8
  },
  {
    _id: ObjectId('656543dbd94bf142291300d4'),
    name: 'Tom',
    age: 33,
    gpa: 3.2
  },
  {
    _id: ObjectId('656544fcd94bf142291300d5'),
    name: 'Bob',
    age: 21,
    gpa: 3.5
  },
  {
    _id: ObjectId('656546edd94bf142291300d8'),
    name: 'Larry Xu',
    age: 44,
    gpa: 3.5,
    fullTime: false,
    startDate: ISODate('2022-01-02T00:00:00.000Z'),
    endDate: null,
    majors: [ 'stats', 'cs' ],
    address: { street: '123 Fake St.', city: 'Fake City', zip: 12345 }
  },
  {
    _id: ObjectId('656544fcd94bf142291300d7'),
    name: 'Sandy',
    age: 19,
    gpa: 3.9
  }
]
work> db.employees.find().limit(2)  //limit the amount of documents that are returned
[
  {
    _id: ObjectId('656543dbd94bf142291300d4'),
    name: 'Tom',
    age: 33,
    gpa: 3.2
  },
  {
    _id: ObjectId('656544fcd94bf142291300d5'),
    name: 'Bob',
    age: 21,
    gpa: 3.5
  }
]
work> db.employees.find().sort({gpa:-1}).limit(1) //who has the highest gpa?
[
  {
    _id: ObjectId('656544fcd94bf142291300d7'),
    name: 'Sandy',
    age: 19,
    gpa: 3.9
  }
]
work> db.employees.find({name:"Bob"}) //returns any document with first name Bob
[
  {
    _id: ObjectId('656544fcd94bf142291300d5'),
    name: 'Bob',
    age: 21,
    gpa: 3.5
  }
]
work> db.employees.find({gpa:3.9}) //returns any document with gpa 3.9
[
  {
    _id: ObjectId('656544fcd94bf142291300d7'),
    name: 'Sandy',
    age: 19,
    gpa: 3.9
  }
]
work> db.employees.find({fullTime:false}) //returns any document with fulltime false
[
  {
    _id: ObjectId('656546edd94bf142291300d8'),
    name: 'Larry Xu',
    age: 44,
    gpa: 3.5,
    fullTime: false,
    startDate: ISODate('2022-01-02T00:00:00.000Z'),
    endDate: null,
    majors: [ 'stats', 'cs' ],
    address: { street: '123 Fake St.', city: 'Fake City', zip: 12345 }
  }
]
work> db.employees.find({gpa:3.5,fullTime:false}) //returns any document with gpa 3.5 and with fulltime false
[
  {
    _id: ObjectId('656546edd94bf142291300d8'),
    name: 'Larry Xu',
    age: 44,
    gpa: 3.5,
    fullTime: false,
    startDate: ISODate('2022-01-02T00:00:00.000Z'),
    endDate: null,
    majors: [ 'stats', 'cs' ],
    address: { street: '123 Fake St.', city: 'Fake City', zip: 12345 }
  }
]
work> db.employees.find({},{name:true}) //return all documents but only the names in them. the syntax is .find({query},{projection})
[
  { _id: ObjectId('656543dbd94bf142291300d4'), name: 'Tom' },
  { _id: ObjectId('656544fcd94bf142291300d5'), name: 'Bob' },
  { _id: ObjectId('656544fcd94bf142291300d6'), name: 'Harry' },
  { _id: ObjectId('656544fcd94bf142291300d7'), name: 'Sandy' },
  { _id: ObjectId('656546edd94bf142291300d8'), name: 'Larry Xu' }
]
work> db.employees.find({},{_id:false,name:true}) 
[
  { name: 'Tom' },
  { name: 'Bob' },
  { name: 'Harry' },
  { name: 'Sandy' },
  { name: 'Larry Xu' }
]
work> db.employees.find({},{_id:false,name:true,gpa:true}) 
[
  { name: 'Tom', gpa: 3.2 },
  { name: 'Bob', gpa: 3.5 },
  { name: 'Harry', gpa: 2.8 },
  { name: 'Sandy', gpa: 3.9 },
  { name: 'Larry Xu', gpa: 3.5 }
]
work> db.employees.updateOne({name:"Tom"},{$set:{fullTime:true}}) // the syntax is .updateOne(filter,update)
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
work> db.employees.find({name:"Tom"})
[
  {
    _id: ObjectId('656543dbd94bf142291300d4'),
    name: 'Tom',
    age: 33,
    gpa: 3.2,
    fullTime: true
  }
]
work> db.employees.updateOne({_id: ObjectId('656543dbd94bf142291300d4')},{$set:{fullTime:false}}) // get document with that id and update)
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
work> db.employees.find({_id: ObjectId('656543dbd94bf142291300d4')})
[
  {
    _id: ObjectId('656543dbd94bf142291300d4'),
    name: 'Tom',
    age: 33,
    gpa: 3.2,
    fullTime: false
  }
]
work> db.employees.updateOne({_id: ObjectId('656543dbd94bf142291300d4')},{$unset:{fullTime:""}}) //get rid of fullTime field for Tom
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
work> db.employees.find({_id: ObjectId('656543dbd94bf142291300d4')})
[
  {
    _id: ObjectId('656543dbd94bf142291300d4'),
    name: 'Tom',
    age: 33,
    gpa: 3.2
  }
]
work> db.employees.updateMany({},{$set:{fullTime:false}}) //for all document, set fullTime as false. If there is no such field, it will create one 
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 5,
  modifiedCount: 4,
  upsertedCount: 0
}
work> db.employees.find()
[
  {
    _id: ObjectId('656543dbd94bf142291300d4'),
    name: 'Tom',
    age: 33,
    gpa: 3.2,
    fullTime: false
  },
  {
    _id: ObjectId('656544fcd94bf142291300d5'),
    name: 'Bob',
    age: 21,
    gpa: 3.5,
    fullTime: false
  },
  {
    _id: ObjectId('656544fcd94bf142291300d6'),
    name: 'Harry',
    age: 30,
    gpa: 2.8,
    fullTime: false
  },
  {
    _id: ObjectId('656544fcd94bf142291300d7'),
    name: 'Sandy',
    age: 19,
    gpa: 3.9,
    fullTime: false
  },
  {
    _id: ObjectId('656546edd94bf142291300d8'),
    name: 'Larry Xu',
    age: 44,
    gpa: 3.5,
    fullTime: false,
    startDate: ISODate('2022-01-02T00:00:00.000Z'),
    endDate: null,
    majors: [ 'stats', 'cs' ],
    address: { street: '123 Fake St.', city: 'Fake City', zip: 12345 }
  }
]
work> db.employees.updateOne({name:"Bob"},{$unset:{fullTime:""}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
work> db.employees.updateOne({name:"Sandy"},{$unset:{fullTime:""}}) 
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
work> db.employees.find()
[
  {
    _id: ObjectId('656543dbd94bf142291300d4'),
    name: 'Tom',
    age: 33,
    gpa: 3.2,
    fullTime: false
  },
  {
    _id: ObjectId('656544fcd94bf142291300d5'),
    name: 'Bob',
    age: 21,
    gpa: 3.5
  },
  {
    _id: ObjectId('656544fcd94bf142291300d6'),
    name: 'Harry',
    age: 30,
    gpa: 2.8,
    fullTime: false
  },
  {
    _id: ObjectId('656544fcd94bf142291300d7'),
    name: 'Sandy',
    age: 19,
    gpa: 3.9
  },
  {
    _id: ObjectId('656546edd94bf142291300d8'),
    name: 'Larry Xu',
    age: 44,
    gpa: 3.5,
    fullTime: false,
    startDate: ISODate('2022-01-02T00:00:00.000Z'),
    endDate: null,
    majors: [ 'stats', 'cs' ],
    address: { street: '123 Fake St.', city: 'Fake City', zip: 12345 }
  }
]
work> db.employees.updateMany({fullTime:{$exists:false}},{$set:{fullTime:true}}) //for document where fullTime does not exist, set fullTime as true
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 2,
  modifiedCount: 2,
  upsertedCount: 0
}
work> db.employees.find()
[
  {
    _id: ObjectId('656543dbd94bf142291300d4'),
    name: 'Tom',
    age: 33,
    gpa: 3.2,
    fullTime: false
  },
  {
    _id: ObjectId('656544fcd94bf142291300d5'),
    name: 'Bob',
    age: 21,
    gpa: 3.5,
    fullTime: true
  },
  {
    _id: ObjectId('656544fcd94bf142291300d6'),
    name: 'Harry',
    age: 30,
    gpa: 2.8,
    fullTime: false
  },
  {
    _id: ObjectId('656544fcd94bf142291300d7'),
    name: 'Sandy',
    age: 19,
    gpa: 3.9,
    fullTime: true
  },
  {
    _id: ObjectId('656546edd94bf142291300d8'),
    name: 'Larry Xu',
    age: 44,
    gpa: 3.5,
    fullTime: false,
    startDate: ISODate('2022-01-02T00:00:00.000Z'),
    endDate: null,
    majors: [ 'stats', 'cs' ],
    address: { street: '123 Fake St.', city: 'Fake City', zip: 12345 }
  }
]
work> db.employees.deleteOne({name:"Larry Xu"})
{ acknowledged: true, deletedCount: 1 }
work> db.employees.find()
[
  {
    _id: ObjectId('656543dbd94bf142291300d4'),
    name: 'Tom',
    age: 33,
    gpa: 3.2,
    fullTime: false
  },
  {
    _id: ObjectId('656544fcd94bf142291300d5'),
    name: 'Bob',
    age: 21,
    gpa: 3.5,
    fulltime: true
  },
  {
    _id: ObjectId('656544fcd94bf142291300d6'),
    name: 'Harry',
    age: 30,
    gpa: 2.8,
    fullTime: false
  },
  {
    _id: ObjectId('656544fcd94bf142291300d7'),
    name: 'Sandy',
    age: 19,
    gpa: 3.9,
    fulltime: true
  }
]
work> db.employees.deleteMany({fullTime:false})
{ acknowledged: true, deletedCount: 2 }
work> db.employees.find()
[
  {
    _id: ObjectId('656544fcd94bf142291300d5'),
    name: 'Bob',
    age: 21,
    gpa: 3.5,
    fulltime: true
  },
  {
    _id: ObjectId('656544fcd94bf142291300d7'),
    name: 'Sandy',
    age: 19,
    gpa: 3.9,
    fulltime: true
  }
]
work> db.employees.deleteMany({registerDate:{$exists:false}}) //if registerDate field does not exist, delete that document
{ acknowledged: true, deletedCount: 2 }
work> db.employees.find() //nothing returns, this is now empty

******* note that the mongocompass and vsc are connected. export/import document can work easily using compass. since they are connected it is not a problem to continue working in vsc *********
Comparison Operators: Denoted with a $ sign

work> db.employees.find({name:{$ne:'Tom'}}) //find every document that has name not equal to Tom
[
  {
    _id: ObjectId('656544fcd94bf142291300d5'),
    name: 'Bob',
    age: 21,
    gpa: 3.5,
    fulltime: true
  },
  {
    _id: ObjectId('656544fcd94bf142291300d6'),
    name: 'Harry',
    age: 30,
    gpa: 2.8,
    fullTime: false
  },
  {
    _id: ObjectId('656544fcd94bf142291300d7'),
    name: 'Sandy',
    age: 19,
    gpa: 3.9,
    fulltime: true
  },
  {
    _id: ObjectId('656546edd94bf142291300d8'),
    name: 'Larry Xu',
    age: 44,
    gpa: 3.5,
    fullTime: false,
    startDate: ISODate('2022-01-02T00:00:00.000Z'),
    endDate: null,
    majors: [ 'stats', 'cs' ],
    address: { street: '123 Fake St.', city: 'Fake City', zip: 12345 }
  }
]
work> db.employees.find({age:{$lt:25}}) //age less than 25 
[
  {
    _id: ObjectId('656544fcd94bf142291300d5'),
    name: 'Bob',
    age: 21,
    gpa: 3.5,
    fulltime: true
  },
  {
    _id: ObjectId('656544fcd94bf142291300d7'),
    name: 'Sandy',
    age: 19,
    gpa: 3.9,
    fulltime: true
  }
]
work> db.employees.find({age:{$gt:25}}) //age greater than 25 
[
  {
    _id: ObjectId('656543dbd94bf142291300d4'),
    name: 'Tom',
    age: 33,
    gpa: 3.2,
    fullTime: false
  },
  {
    _id: ObjectId('656544fcd94bf142291300d6'),
    name: 'Harry',
    age: 30,
    gpa: 2.8,
    fullTime: false
  },
  {
    _id: ObjectId('656546edd94bf142291300d8'),
    name: 'Larry Xu',
    age: 44,
    gpa: 3.5,
    fullTime: false,
    startDate: ISODate('2022-01-02T00:00:00.000Z'),
    endDate: null,
    majors: [ 'stats', 'cs' ],
    address: { street: '123 Fake St.', city: 'Fake City', zip: 12345 }
  }
]
work> db.employees.find({age:{$gte:33}}) //age greater than or equals 33
[
  {
    _id: ObjectId('656543dbd94bf142291300d4'),
    name: 'Tom',
    age: 33,
    gpa: 3.2,
    fullTime: false
  },
  {
    _id: ObjectId('656546edd94bf142291300d8'),
    name: 'Larry Xu',
    age: 44,
    gpa: 3.5,
    fullTime: false,
    startDate: ISODate('2022-01-02T00:00:00.000Z'),
    endDate: null,
    majors: [ 'stats', 'cs' ],
    address: { street: '123 Fake St.', city: 'Fake City', zip: 12345 }
  }
]
work> db.employees.find({gpa:{$gte:3,$lte:4}}) //documents with gpa between 3 and 4, inclusive
[
  {
    _id: ObjectId('656543dbd94bf142291300d4'),
    name: 'Tom',
    age: 33,
    gpa: 3.2,
    fullTime: false
  },
  {
    _id: ObjectId('656544fcd94bf142291300d5'),
    name: 'Bob',
    age: 21,
    gpa: 3.5,
    fulltime: true
  },
  {
    _id: ObjectId('656544fcd94bf142291300d7'),
    name: 'Sandy',
    age: 19,
    gpa: 3.9,
    fulltime: true
  },
  {
    _id: ObjectId('656546edd94bf142291300d8'),
    name: 'Larry Xu',
    age: 44,
    gpa: 3.5,
    fullTime: false,
    startDate: ISODate('2022-01-02T00:00:00.000Z'),
    endDate: null,
    majors: [ 'stats', 'cs' ],
    address: { street: '123 Fake St.', city: 'Fake City', zip: 12345 }
  }
]
work> db.employees.find({name:{$in:['Tom','Harry']}}) //any document with name Tom or Harry
[
  {
    _id: ObjectId('656543dbd94bf142291300d4'),
    name: 'Tom',
    age: 33,
    gpa: 3.2,
    fullTime: false
  },
  {
    _id: ObjectId('656544fcd94bf142291300d6'),
    name: 'Harry',
    age: 30,
    gpa: 2.8,
    fullTime: false
  }
]
work> db.employees.find({name:{$nin:['Tom','Harry']}}) //any document with name not Tom or Harry
[
  {
    _id: ObjectId('656544fcd94bf142291300d5'),
    name: 'Bob',
    age: 21,
    gpa: 3.5,
    fulltime: true
  },
  {
    _id: ObjectId('656544fcd94bf142291300d7'),
    name: 'Sandy',
    age: 19,
    gpa: 3.9,
    fulltime: true
  },
  {
    _id: ObjectId('656546edd94bf142291300d8'),
    name: 'Larry Xu',
    age: 44,
    gpa: 3.5,
    fullTime: false,
    startDate: ISODate('2022-01-02T00:00:00.000Z'),
    endDate: null,
    majors: [ 'stats', 'cs' ],
    address: { street: '123 Fake St.', city: 'Fake City', zip: 12345 }
  }
]
work> db.employees.find({$and:[{fulltime:true},{age:{$lte:23}}]}) //return those documents where both criteria are satisfied
[
  {
    _id: ObjectId('656544fcd94bf142291300d5'),
    name: 'Bob',
    age: 21,
    gpa: 3.5,
    fulltime: true
  },
  {
    _id: ObjectId('656544fcd94bf142291300d7'),
    name: 'Sandy',
    age: 19,
    gpa: 3.9,
    fulltime: true
  }
]
work> db.employees.find({$or:[{fulltime:true},{age:{$lte:32}}]}) //return those documents where either is true
[
  {
    _id: ObjectId('656544fcd94bf142291300d5'),
    name: 'Bob',
    age: 21,
    gpa: 3.5,
    fulltime: true
  },
  {
    _id: ObjectId('656544fcd94bf142291300d6'),
    name: 'Harry',
    age: 30,
    gpa: 2.8,
    fullTime: false
  },
  {
    _id: ObjectId('656544fcd94bf142291300d7'),
    name: 'Sandy',
    age: 19,
    gpa: 3.9,
    fulltime: true
  }
]
work> db.employees.find({$nor:[{fulltime:true},{age:{$lte:32}}]}) //return those documents where neither is true
[
  {
    _id: ObjectId('656543dbd94bf142291300d4'),
    name: 'Tom',
    age: 33,
    gpa: 3.2,
    fullTime: false
  },
  {
    _id: ObjectId('656546edd94bf142291300d8'),
    name: 'Larry Xu',
    age: 44,
    gpa: 3.5,
    fullTime: false,
    startDate: ISODate('2022-01-02T00:00:00.000Z'),
    endDate: null,
    majors: [ 'stats', 'cs' ],
    address: { street: '123 Fake St.', city: 'Fake City', zip: 12345 }
  }
]
work> db.employees.find({age:{$not:{$gte:30}}}) //return those documents where age not gte to 30. There could be another simpler way, but this is useful even when age is NULL. 
[
  {
    _id: ObjectId('656544fcd94bf142291300d5'),
    name: 'Bob',
    age: 21,
    gpa: 3.5,
    fulltime: true
  },
  {
    _id: ObjectId('656544fcd94bf142291300d7'),
    name: 'Sandy',
    age: 19,
    gpa: 3.9,
    fulltime: true
  }
]

